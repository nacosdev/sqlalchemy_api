[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sqlalchemy-api"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = ["sqlalchemy", "fastapi", "starlette", "api", "rest"]
authors = [
  { name = "Nicolas Acosta", email = "nacosdev@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
  "sqlalchemy>=1.4",
  "psycopg2-binary>=2.9.5",
  "pydantic>=2",
]

[project.urls]
Documentation = "https://github.com/nacosdev/sqlalchemy_api#readme"
Issues = "https://github.com/nacosdev/sqlalchemy-api/issues"
Source = "https://github.com/nacosdev/sqlalchemy-api"

[project.optional-dependencies]
fastapi = [
  "fastapi>=0.100.0",
]
asgi = [
  "starlette",
  "uvicorn",
]
[tool.hatch.version]
path = "sqlalchemy_api/__about__.py"

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs-material==9.1.3",
  "mkdocs==1.4.2",
  "mkdocstrings[python]==0.20.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dev-addr localhost:8080"
deploy = "mkdocs gh-deploy --force"

[tool.hatch.envs.default]
dependencies = [
  "sqlalchemy-utc>=0.10.0",
  "uvicorn",
]

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "fastapi>=0.100.0",
  "uvicorn",
  "pydantic>=2",
  "starlette",
  "httpx",
  "sqlalchemy-utc>=0.10.0",
  "pytest-asyncio",
  "psycopg2-binary>=2.9"
]

#[[tool.hatch.envs.test.matrix]]
#python = ["3.8", "3.9", "3.10", "3.11"]

[[tool.hatch.envs.test.matrix]]
sqlalchemy = ["1.4", "2.0"]

[tool.hatch.envs.test.scripts]
test = "coverage run -m pytest {args}"
cov = [
  "coverage report -m --show-missing --skip-covered --fail-under=95",
  "coverage xml",
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "sqlalchemy>=1.4",
  "psycopg2-binary>=2.9.5",
  "fastapi>=0.100.0",
  "uvicorn",
  "pydantic>=2",
  "starlette",
]

[tool.hatch.envs.lint.scripts]
check = [
  "ruff .",
  "black --check .",
  "mypy sqlalchemy_api",
]
format = [
  "black .",
  "ruff --fix .",
]

[tool.hatch.envs.lint.env-vars]
MYPYPATH="sqlalchemy_api/"

[tool.coverage.run]
source_pkgs = [
  "sqlalchemy_api",
  "tests",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: nocover",
    "except NotImplementedError",
    "raise NotImplementedError",
]
